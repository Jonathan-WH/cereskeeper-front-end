<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Animation 3D CK</title>
    <style>
        body { margin: 0; background: black; }
        canvas { display: block; }
    </style>
</head>
<body>
    <!-- Inclure Three.js depuis un CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"></script>
    <script>
        // Initialisation de la scène
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // Créer une texture binaire "0" et "1" en blanc sur fond transparent
        const canvas = document.createElement('canvas');
        canvas.width = 256;
        canvas.height = 256;
        const ctx = canvas.getContext('2d');
        ctx.fillStyle = 'rgba(0, 0, 0, 0)'; // Fond transparent
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'white'; // Texte blanc
        ctx.font = '20px monospace';
        for (let y = 0; y < 256; y += 20) {
            for (let x = 0; x < 256; x += 20) {
                ctx.fillText(Math.random() > 0.5 ? '0' : '1', x, y);
            }
        }
        const texture = new THREE.CanvasTexture(canvas);
        texture.wrapS = THREE.RepeatWrapping;
        texture.wrapT = THREE.RepeatWrapping;
        texture.repeat.set(2, 2);

        // Matériau avec la texture
        const material = new THREE.MeshBasicMaterial({ map: texture, transparent: true });

        // Créer les lettres "C" et "K" comme des boîtes simples (pour simplifier sans police 3D)
        const geometryC = new THREE.BoxGeometry(1, 2, 0.2);
        const geometryK = new THREE.BoxGeometry(1, 2, 0.2);
        const meshC = new THREE.Mesh(geometryC, material);
        const meshK = new THREE.Mesh(geometryK, material);

        // Positionner les lettres
        meshC.position.set(-0.8, 0, 0);
        meshK.position.set(0.8, 0, 0);
        scene.add(meshC);
        scene.add(meshK);

        // Positionner la caméra
        camera.position.z = 5;

        // Animation
        function animate() {
            requestAnimationFrame(animate);
            meshC.rotation.y += 0.03; // Rotation lente
            meshK.rotation.y += 0.03;
            renderer.render(scene, camera);
        }
        animate();

        // Ajuster la taille si la fenêtre change
        window.addEventListener('resize', () => {
            renderer.setSize(window.innerWidth, window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
        });
    </script>
</body>
</html>